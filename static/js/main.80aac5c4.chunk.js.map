{"version":3,"sources":["reactlogo.png","components/Home.js","components/ResourceList.js","components/About.js","components/Services.js","contexts/RegionContext.js","components/UltimateContact.js","components/ContactAddress.js","components/ContactArea.js","components/Contact.js","components/GoogleAuth.js","components/Header.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","className","style","backgroundColor","height","contentStyle","this","props","heading","color","marginLeft","src","logo","logoStyle","Component","marginTop","width","ResourceList","_ref","resource","_useState","useState","_useState2","Object","slicedToArray","resources","setResources","useEffect","_ref2","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","concat","sent","data","stop","_x","apply","arguments","map","record","title","About","setResource","onClick","components_ResourceList","Services","state","posts","apicall","setState","post","key","id","body","renderContent","React","createContext","ContactAddress","value","_this","RegionContext","Consumer","text","context","UltimateContact","contextType","ContactArea","components_ContactAddress","Contact","contact","onRegionChange","region","_this2","Provider","components_ContactArea","GoogleAuth","isSignedIn","onAuthChange","auth","onSignIn","signIn","onSignOut","signOut","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Header","button","activateHome","activateAbout","activateServices","activateContact","components_Home","components_About","components_Services","components_Contact","navbarStyle","aStyle","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","components_GoogleAuth","border","cursor","marginRight","App","components_Header","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.80aac5c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactlogo.47ce6e77.png\";","import React, { Component } from 'react';\nimport logo from '../reactlogo.png';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div\n        className=\"container-fluid\"\n        style={{ backgroundColor: '#0E3746', height: '100vh' }}\n      >\n        <div className=\"row\">\n          <div className=\"col-sm-12 col-md-6 col-lg-6\">\n            <h1 style={contentStyle}>{this.props.heading}</h1>\n            <p style={{ color: '#ffffff', marginLeft: '10vh' }}>\n              This is what I built to revise React. React is a JavaScript\n              library made by Facebook.\n            </p>\n          </div>\n          <div className=\"col-sm-12 col-md-6 col-lg-6\">\n            <img src={logo} className=\"responsive\" style={logoStyle} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst logoStyle = {\n    marginTop: '12vh',\n    width: '80%',\n    height: 'auto',\n    marginLeft: '10vh'\n  },\n  contentStyle = {\n    color: '#ffffff',\n    marginTop: '25vh',\n    marginLeft: '10vh'\n  };\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ResourceList = ({ resource }) => {\n  const [resources, setResources] = useState([]);\n\n  useEffect(() => {\n    (async resource => {\n      const response = await axios.get(\n        `https://jsonplaceholder.typicode.com/${resource}`\n      );\n\n      setResources(response.data);\n    })(resource);\n  }, [resource]);\n\n  return (\n    <div style={{ marginTop: '2vh' }}>\n      <ul className=\"list-group\">\n        {resources.map(record => (\n          <li className=\"list-group-item\">{record.title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ResourceList;\n","import React, { useState } from 'react';\nimport ResourceList from './ResourceList';\n\nconst About = () => {\n  const [resource, setResource] = useState('posts');\n\n  return (\n    <div className=\"container\" style={{ marginTop: '1vh' }}>\n      <div>\n        <h2>Using Hooks</h2>\n        <button className=\"btn btn-dark\" onClick={() => setResource('posts')}>\n          Posts\n        </button>\n        <button\n          className=\"btn btn-dark\"\n          onClick={() => setResource('todos')}\n          style={{ marginLeft: '1vh' }}\n        >\n          Todos\n        </button>\n      </div>\n      <ResourceList resource={resource} />\n    </div>\n  );\n};\n\nexport default About;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Services extends Component {\n  state = { posts: [] };\n\n  async componentDidMount() {\n    this.apicall();\n  }\n\n  async apicall() {\n    const response = await axios.get(\n      'https://jsonplaceholder.typicode.com/posts',\n      {}\n    );\n    this.setState({ posts: response.data });\n  }\n\n  renderContent() {\n    return this.state.posts.map(post => {\n      return (\n        <li className=\"list-group-item\" key={post.id}>\n          <h2>{post.title}</h2>\n          <p>{post.body}</p>\n        </li>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\" style={{ marginTop: '1vh' }}>\n        <h2>Using Axios for API call</h2>\n        <ul className=\"list-group\" style={{ marginTop: '2vh' }}>\n          {this.renderContent()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Services;\n","import React from 'react';\n\nexport default React.createContext('india');\n","import React from 'react';\nimport RegionContext from '../contexts/RegionContext';\n\nclass ContactAddress extends React.Component {\n  renderContent(value) {\n    if (value === 'india') {\n      return 'Our New Delhi office is located in Lajpat Nagar.';\n    } else if (value === 'usa') {\n      return 'Our New Delhi office is located in Manhatten.';\n    } else if (value === 'uk') {\n      return 'Our New Delhi office is located in Oxford Street.';\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <RegionContext.Consumer>\n          {value => this.renderContent(value)}\n        </RegionContext.Consumer>\n      </div>\n    );\n  }\n}\n\nexport default ContactAddress;\n","import React from 'react';\nimport RegionContext from '../contexts/RegionContext';\nimport UltimateContact from './UltimateContact';\n\nclass ContactAddress extends React.Component {\n  static contextType = RegionContext;\n\n  render() {\n    var text = 'We do not have an office in your city.';\n\n    if (this.context === 'india') {\n      text = 'Our office is in New Delhi';\n    } else if (this.context === 'usa') {\n      text = 'Our office is in New York';\n    } else if (this.context === 'uk') {\n      text = 'Our office is in London';\n    }\n\n    return (\n      <div className=\"container\" style={{ marginTop: '2vh' }}>\n        <h4>{text}</h4>\n        <UltimateContact />\n      </div>\n    );\n  }\n}\n\nexport default ContactAddress;\n","import React from 'react';\nimport ContactAddress from './ContactAddress';\n\nclass ContactArea extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <ContactAddress />\n      </div>\n    );\n  }\n}\n\nexport default ContactArea;\n","import React, { Component } from 'react';\nimport ContactArea from './ContactArea';\nimport RegionContext from '../contexts/RegionContext';\n\nclass Contact extends Component {\n  state = { contact: 'india' };\n\n  onRegionChange = region => {\n    this.setState({ contact: region });\n  };\n\n  render() {\n    return (\n      <div className=\"container\" style={{ marginTop: '1vh' }}>\n        <h2>Using Context</h2>\n        <div>\n          <h4>Select Your Region : </h4>\n          <button\n            className=\"btn btn-dark\"\n            onClick={() => this.onRegionChange('india')}\n          >\n            India\n          </button>\n          <button\n            className=\"btn btn-dark\"\n            onClick={() => this.onRegionChange('usa')}\n            style={{ marginLeft: '1vh' }}\n          >\n            USA\n          </button>\n          <button\n            className=\"btn btn-dark\"\n            onClick={() => this.onRegionChange('uk')}\n            style={{ marginLeft: '1vh' }}\n          >\n            UK\n          </button>\n        </div>\n        <RegionContext.Provider value={this.state.contact}>\n          <ContactArea />\n        </RegionContext.Provider>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React from 'react';\n\nclass GoogleAuth extends React.Component {\n  state = { isSignedIn: null };\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client\n        .init({\n          clientId:\n            '76970026782-l8vg30sid0o0cj7mods1tqnr7gpe5hlj.apps.googleusercontent.com',\n          scope: 'email'\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n\n  onAuthChange = () => {\n    this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n  };\n\n  onSignIn = () => {\n    this.auth.signIn();\n  };\n\n  onSignOut = () => {\n    this.auth.signOut();\n  };\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) {\n      return null;\n    } else if (this.state.isSignedIn) {\n      return (\n        <button className=\"btn btn-danger\" onClick={this.onSignOut}>\n          Sign Out\n        </button>\n      );\n    } else {\n      return (\n        <button className=\"btn btn-danger\" onClick={this.onSignIn}>\n          Sign In With Google\n        </button>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>{this.renderAuthButton()}</h3>\n      </div>\n    );\n  }\n}\n\nexport default GoogleAuth;\n","import React, { Component } from 'react';\nimport Home from './Home';\nimport About from './About';\nimport Services from './Services';\nimport Contact from './Contact';\nimport GoogleAuth from './GoogleAuth';\n\nclass Header extends Component {\n  state = { button: 'home' };\n\n  activateHome = () => {\n    this.setState({ button: 'home' });\n  };\n\n  activateAbout = () => {\n    this.setState({ button: 'about' });\n  };\n\n  activateServices = () => {\n    this.setState({ button: 'services' });\n  };\n\n  activateContact = () => {\n    this.setState({ button: 'contact' });\n  };\n\n  renderContent() {\n    if (this.state.button === 'home') {\n      return <Home heading=\"Revisin' React\" />;\n    } else if (this.state.button === 'about') {\n      return <About />;\n    } else if (this.state.button === 'services') {\n      return <Services />;\n    } else if (this.state.button === 'contact') {\n      return <Contact />;\n    } else return <Home heading=\"Revisin' React\" />;\n  }\n\n  render() {\n    return (\n      <div>\n        <nav\n          className=\"navbar navbar-expand-lg navbar-light\"\n          style={navbarStyle}\n        >\n          <a\n            className=\"navbar-brand\"\n            style={aStyle}\n            onClick={this.activateHome}\n          >\n            Revisin' React\n          </a>\n          <a\n            className=\"navbar-toggler\"\n            type=\"a\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </a>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"nav navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link\"\n                  onClick={this.activateHome}\n                  style={aStyle}\n                >\n                  Home\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link\"\n                  onClick={this.activateAbout}\n                  style={aStyle}\n                >\n                  About\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link\"\n                  onClick={this.activateServices}\n                  style={aStyle}\n                >\n                  Services\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link\"\n                  onClick={this.activateContact}\n                  style={aStyle}\n                >\n                  Contact\n                </a>\n              </li>\n            </ul>\n            <div style={{ marginTop: '1vh' }}>\n              <GoogleAuth />\n            </div>\n          </div>\n        </nav>\n        {this.renderContent()}\n      </div>\n    );\n  }\n}\n\nconst aStyle = {\n    border: 0,\n    backgroundColor: '#0E3746',\n    color: '#ffffff',\n    cursor: 'pointer',\n    marginRight: '5vh'\n  },\n  navbarStyle = {\n    backgroundColor: '#0E3746'\n  };\n\nexport default Header;\n","import React, { Component } from 'react';\nimport Header from './Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}